# Testing the code base against a specific Meilisearch feature
name: Meilisearch prototype tests

env:
  HUSKY: 0

# Will only run for PRs and pushes to *-beta
on:
  pull_request:
    branches:
      - 'prototype-beta/**'
  push:
    branches:
      - 'prototype-beta/**'

jobs:
  meilisearch-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.grep-step.outputs.meilisearch_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Grep docker beta version of Meilisearch
        id: grep-step
        run: |
          MEILISEARCH_VERSION=$(sh .github/scripts/prototype-docker-version.sh $GITHUB_REF_NAME)
          if [ -z "$MEILISEARCH_VERSION" ]
          then
            echo "Could not find any docker image for this prototype: $GITHUB_REF_NAME"
            exit 1
          else
            echo $MEILISEARCH_VERSION
          fi
          echo "meilisearch_version=$MEILISEARCH_VERSION" >> $GITHUB_OUTPUT
  integration_tests:
    runs-on: ubuntu-latest
    needs: ['meilisearch-version']
    services:
      meilisearch:
        image: getmeili/meilisearch:${{ needs.meilisearch-version.outputs.version }}
        env:
          MEILI_MASTER_KEY: 'masterKey'
          MEILI_NO_ANALYTICS: 'true'
        ports:
          - '7700:7700'
    strategy:
      matrix:
        node: ['18', '20', '22']
    name: integration-tests (Node.js ${{ matrix.node }})
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Install dependencies
        run: yarn --dev
      - name: Run tests
        run: yarn test
      - name: Build project
        run: yarn build
      - name: Run ESM env
        run: yarn test:env:esm
      - name: Run Node.js env
        run: yarn test:env:nodejs
      - name: Run node typescript env
        run: yarn test:env:node-ts
      - name: Run Browser env
        run: yarn test:env:browser
