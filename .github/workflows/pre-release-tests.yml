# Testing the code base against the Meilisearch pre-releases
name: Pre-Release Tests

# Will only run for PRs and pushes to bump-meilisearch-v*
on:
  pull_request:
    branches:
      - "bump-meilisearch-v**"
      - "pre-release-beta/**"
  push:
    branches:
      - "bump-meilisearch-v**"
      - "pre-release-beta/**"

jobs:
  meilisearch-version:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || startsWith(github.base_ref, 'bump-meilisearch-v') || startsWith(github.base_ref, 'pre-release-beta')
    outputs:
      version: ${{ steps.grep-step.outputs.meilisearch_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Grep docker beta version of Meilisearch
        id: grep-step
        run: |
          MEILISEARCH_VERSION=$(curl https://raw.githubusercontent.com/meilisearch/integration-guides/main/scripts/get-latest-meilisearch-rc.sh | sh)
          echo "meilisearch_version=$MEILISEARCH_VERSION" >> $GITHUB_OUTPUT
  integration_tests:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || startsWith(github.base_ref, 'bump-meilisearch-v') || startsWith(github.base_ref, 'pre-release-beta')
    needs: ["meilisearch-version"]
    services:
      meilisearch:
        image: getmeili/meilisearch:${{ needs.meilisearch-version.outputs.version }}
        env:
          MEILI_MASTER_KEY: "masterKey"
          MEILI_NO_ANALYTICS: "true"
        ports:
          - "7700:7700"
    strategy:
      matrix:
        node-version: ["18", "20", "22"]
    name: integration-tests (Node.js ${{ matrix.node-version }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-up-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run tests
        run: npm test
      - name: Build project
        run: npm run build
      - name: Run ESM env
        run: npm run test:env:esm
      - name: Run Node.js env
        run: npm run test:env:nodejs
      - name: Run node typescript env
        run: npm run test:env:node-ts
      - name: Run Browser env
        run: npm run test:env:browser
